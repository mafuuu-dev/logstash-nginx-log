input {
	file {
		ignore_older => 0
		type => "nginx_access"
		sincedb_path => "/dev/null"
		start_position => "beginning"
		path => "/logs/access_nginx.log"
	}

    file {
        ignore_older => 0
        type => "nginx_error"
        sincedb_path => "/dev/null"
        start_position => "beginning"
        path => "/logs/error_nginx.log"
    }
}

filter {
    if [type] == "nginx_access" {
        grok {
            patterns_dir => ["/opt/logstash/patterns"]
            match => { "message" => "%{NGINXACCESS}" }
        }

        date {
            match => [ "timestamp" , "dd/MMM/YYYY HH:mm:ss Z" ]
        }
    }

    if [type] == "nginx_error" {
        grok {
            patterns_dir => ["/opt/logstash/patterns"]
            match => { "message" => "%{NGINXERROR}" }
        }

        date {
            match => [ "timestamp" , "dd/MMM/YYYY HH:mm:ss Z" ]
        }       
    }    

    mutate {
        remove_field => ["@version", "@timestamp", "type"]
    }
}

output {
	stdout { codec => rubydebug }
}